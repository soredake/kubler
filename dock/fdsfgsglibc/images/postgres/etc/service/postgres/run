#!/bin/bash
# adapted from: https://github.com/docker-library/postgres/blob/e616341507a7beec3a161b0a366ba0d3400328fd/9.4/docker-entrypoint.sh

chown -R postgres "$PGDATA"

mkdir -p /run/postgresql
chmod g+s /run/postgresql
chown -R postgres:postgres /run/postgresql

if [ -z "$(ls -A "$PGDATA")" ]; then
    gosu postgres initdb

    sed -ri "s/^#(listen_addresses\s*=\s*)\S+/\1'*'/" "$PGDATA"/postgresql.conf

    # check password first so we can ouptut the warning before postgres
    # messes it up
    if [ "$POSTGRES_PASSWORD" ]; then
        pass="PASSWORD '$POSTGRES_PASSWORD'"
        authMethod=md5
    else
        # The - option suppresses leading tabs but *not* spaces. :)
        pass=
        authMethod=trust
    fi

    : ${POSTGRES_USER:=postgres}
    : ${POSTGRES_DB:=$POSTGRES_USER}

    if [ "$POSTGRES_DB" != 'postgres' ]; then
        gosu postgres postgres --single -jE << EOSQL
CREATE DATABASE "$POSTGRES_DB" ;
EOSQL
        echo
    fi

    if [ "$POSTGRES_USER" = 'postgres' ]; then
        op='ALTER'
    else
        op='CREATE'
    fi

    gosu postgres postgres --single -jE << EOSQL
$op USER "$POSTGRES_USER" WITH SUPERUSER $pass ;
EOSQL
    echo

    { echo; echo "host all all 0.0.0.0/0 $authMethod"; } >> "$PGDATA"/pg_hba.conf

fi

[ -n "${BACKUP_CRON_SCHEDULE}" ] && [ ! -f /var/spool/cron/crontabs/postgres ] &&
    echo "${BACKUP_CRON_SCHEDULE} /etc/pg_backup_rotated.sh" >> /var/spool/cron/crontabs/postgres &&
    chown postgres:postgres /backup

exec gosu postgres postgres
